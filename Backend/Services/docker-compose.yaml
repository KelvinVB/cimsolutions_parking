version: '3.8'

volumes:
  kong_data: {}

networks:
  kong-net:
    external: false

services:
  kong-database:
    image: cassandra:3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    ports:
      - "9042:9042"

  kong-migrations:
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE= cassandra
      - KONG_CASSANDRA_CONTACT_POINTS= kong-database
      - KONG_LICENSE_DATA= $KONG_LICENSE_DATA
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  kong:
    image: kong:latest
    container_name: kong-api
    environment:
      - KONG_DATABASE= cassandra
      - KONG_CASSANDRA_CONTACT_POINTS= kong-database
      - KONG_PROXY_ACCESS_LOG= /dev/stdout
      - KONG_ADMIN_ACCESS_LOG= /dev/stdout
      - KONG_PROXY_ERROR_LOG= /dev/stderr
      - KONG_ADMIN_ERROR_LOG= /dev/stderr
      - KONG_ADMIN_LISTEN= 0.0.0.0:8001
      - KONG_ADMIN_GUI_LISTEN=0.0.0.0:8002
      - KONG_ADMIN_GUI_URL=http://localhost:8002
      - KONG_LICENSE_DATA= $KONG_LICENSE_DATA
    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    depends_on:
      - kong-database
    restart: on-failure
    
  accountservice:
    container_name: accountservice
    build:
      context: ./accountservice
      dockerfile: Dockerfile
    ports: 
       - "5000:80"